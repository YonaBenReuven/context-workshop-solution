{"ast":null,"code":"var _jsxFileName = \"/home/yona/Desktop/Context/workshop-solution/src/AppProvider.jsx\";\nimport React, { Component, createContext } from 'react';\nexport const MyContext = createContext();\n\nclass AppProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleTheme = () => {\n      const theme = this.state.theme === \"dark\" ? \"light\" : \"dark\";\n      this.setState({\n        theme\n      });\n    };\n\n    this.toggleLanguage = () => {\n      const language = this.state.language === \"English\" ? \"Hebrew\" : \"English\";\n      this.setState({\n        language\n      });\n    };\n\n    this.state = {\n      theme: \"dark\",\n      language: \"English\"\n    };\n  }\n\n  render() {\n    const {\n      state,\n      toggleLanguage,\n      toggleTheme\n    } = this;\n    return React.createElement(MyContext.Provider, {\n      value: { ...state,\n        toggleLanguage,\n        toggleTheme\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default AppProvider;","map":{"version":3,"sources":["/home/yona/Desktop/Context/workshop-solution/src/AppProvider.jsx"],"names":["React","Component","createContext","MyContext","AppProvider","constructor","props","toggleTheme","theme","state","setState","toggleLanguage","language","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,SAAS,GAAGD,aAAa,EAA/B;;AAEP,MAAME,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,WARmB,GAQL,MAAM;AAChB,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,KAAqB,MAArB,GAA8B,OAA9B,GAAwC,MAAtD;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACH,KAXkB;;AAAA,SAanBG,cAbmB,GAaF,MAAM;AACnB,YAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,KAAwB,SAAxB,GAAoC,QAApC,GAA+C,SAAhE;AACA,WAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACH,KAhBkB;;AAEf,SAAKH,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,MADE;AAETI,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAYDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,KAAF;AAASE,MAAAA,cAAT;AAAyBJ,MAAAA;AAAzB,QAAyC,IAA/C;AACA,WACI,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,KAAK,EAAE,EAAE,GAAGE,KAAL;AAAYE,QAAAA,cAAZ;AAA4BJ,QAAAA;AAA5B,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWQ,QADhB,CADJ;AAKH;;AA1B+B;;AA6BpC,eAAeV,WAAf","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const MyContext = createContext();\n\nclass AppProvider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: \"dark\",\n            language: \"English\"\n        }\n    }\n\n    toggleTheme = () => {\n        const theme = this.state.theme === \"dark\" ? \"light\" : \"dark\";\n        this.setState({ theme });\n    }\n\n    toggleLanguage = () => {\n        const language = this.state.language === \"English\" ? \"Hebrew\" : \"English\";\n        this.setState({ language });\n    }\n\n    render() {\n        const { state, toggleLanguage, toggleTheme } = this;\n        return (\n            <MyContext.Provider value={{ ...state, toggleLanguage, toggleTheme }}>\n                {this.props.children}\n            </MyContext.Provider>\n        );\n    }\n}\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}